{
    "id": "0cb9a01a-d8b5-4b77-88b6-c89c4b4eb02d",
    "name": "pulumi-az-remote-pipelines-task",
    "friendlyName": "Pulumi Azure Remote Pipelines Task",
    "description": "Azure Pipelines task extension for running Pulumi apps where state is managed remotely via blob storage and secrets encrypted via a auto generated passphrase stored in key vault.",
    "helpMarkDown": "",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "dan.hyrjak@zing.dev",
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 73
    },
    "instanceNameFormat": "Run pulumi $(cmd) $(args)",
    "inputs": [
        {
            "name": "pulumiVersion",
            "type": "string",
            "label": "Pulumi Version",
            "defaultValue": "latest",
            "required": true,
            "helpMarkDown": "The Pulumi version that should be used. If you require a specific version then the format is '1.1.0' or if you just need the latest version then 'latest' can be used."
        },
        {
            "name": "azureSubscriptionRemoteStoreAndVault",
            "type": "connectedService:AzureRM",
            "label": "Azure Subscription (Remote Storage & Key Vault)",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the Azure Resource Manager subscription that has access to the blob storage account used for remote state storage and the key vault account used to hold encryption secrets."
        },
        {
            "name": "storageAccountName",
            "type": "string",
            "label": "State Storage Account Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Blob Storage account name of the account holding the container that stores the Pulumi State file for Pulumi Stack."
        },
        {
            "name": "containerName",
            "type": "string",
            "label": "State Storage Container Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Name of the Blob Storage Container that stores the Pulumi State file for the selected Pulumi Stack."
        },
        {
            "name": "keyVaultName",
            "type": "string",
            "label": "Key Vault Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the Key Vault that holds the passphrase used to encrypt secrets for the selected Pulumi Stack."
        },
        {
            "name": "passphraseKeyVaultSecretName",
            "type": "string",
            "label": "Key Vault Stack Secret Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The name of the secret in Key Vault that holds the passphrase to use to encrypt secrets for the selected Pulumi Stack. Will also be used as the name of the lock file for stack operations."
        },
        {
            "name": "stack",
            "type": "string",
            "label": "Stack Name",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The Pulumi Stack against which to run the commands. Can only contain alphanumeric characters or dashes and must start with a letter."
        },
        {
            "name": "azureSubscriptionDeployment",
            "type": "connectedService:AzureRM",
            "label": "Azure Subscription (Deployments)",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the Azure Resource Manager subscription that has access to deploy and destroy the resources created by your Pulumi program."
        },
        {
            "name": "cwd",
            "type": "filePath",
            "label": "Working Directory",
            "defaultValue": "$(System.DefaultWorkingDirectory)",
            "required": true,
            "helpMarkDown": "The working directory to set before running the Pulumi command."
        },
        {
            "name": "cmd",
            "type": "pickList",
            "label": "Pulumi Command",
            "defaultValue": "",
            "helpMarkDown": "The pulumi command to run, possible options are:\n- **stack init** - initilises a new stack, with a new secret stored in keyvault to encrypt secrets. On success will create new stack.Pulumi file in working directory. Note: will error if stack already exists in azure storage backend store *(use stack exists command to check for existing stack first)*.\n- **stack exists** - checks if the given stack exists in the remote blob storage account. Will write the result (either `'true'` or `'false'`) to the job level environment vairiable named in the Output Variable setting, defaults to `STACK_EXISTS_RESULT`.\n- **update config** - loops over all environment variables for the current job. For any environment variable that is prefixed with one of the prefixes defined in the Config Prefix setting, (comma seperated, case insensitive, defaults to `PULUMI_`), will write the name (excluding or including the prefix, dependant on Include Prefix setting) and value as a config option for the given stack. Note: if the variable is marked as secret this will be written as secret in the config as well. Once complete will set the status of this action to the job level environment variable named in the Output Variable setting, defaults to `STACK_CONFIG_UPDATE_RESULT`. Possible values are `'some_change'` or `'no_change'`.\n- **output config** - loops over all config settings for the current stack. For any config vaule that is prefixed with one of the prefixes defined in the Config Prefix setting, (comma seperated, case insensitive), will write the name (excluding or including the prefix, dependant on Include Prefix setting) and value as a environment variable for the current job. Note: if the config value is marked as secret the environment variable will also be created as a secret.\n- **preview** - runs the pulumi [preview](https://www.pulumi.com/docs/reference/cli/pulumi_preview/) command with any optional options specified in the Command Args setting. If the Output FilePath setting is set to a valid filePath the Output of the preview command will also be written to disk at the given filePath.\n- **up** - runs the pulumi [up](https://www.pulumi.com/docs/reference/cli/pulumi_up/) command with any optional options specified in the Command Args setting. If the Output FilePath setting is set to a valid filePath the Output of the up command will also be written to disk at the given filePath.\n- **destroy** - runs the pulumi [destroy](https://www.pulumi.com/docs/reference/cli/pulumi_destroy/) command with any optional options specified in the Command Args setting. If the Output FilePath setting is set to a valid filePath the Output of the destroy command will also be written to disk at the given filePath.",
            "required": true,
            "properties": {
                "EditableOptions": "False"
            },
            "options": {
                "stack init": "stack init",
                "stack exists": "stack exists",
                "update config": "update config",
                "output config": "output config",
                "preview": "preview",
                "up": "up",
                "destroy": "destroy"
            }
        },
        {
            "name": "args",
            "type": "string",
            "label": "Command Args",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Use space to separate multiple args. For a list of CLI commands with supported arguments, see [this](https://pulumi.io/reference/commands.html).",
            "visibleRule": "cmd = preview || cmd = up || cmd = destroy"
        },
        {
            "name": "stackExistsOutputVariable",
            "type": "string",
            "label": "Output Variable",
            "defaultValue": "STACK_EXISTS_RESULT",
            "required": false,
            "helpMarkDown": "the name of the job level environment variable that will store the result of the check. Possible values are: 'true' or 'false'",
            "visibleRule": "cmd = stack exists"
        },
        {
            "name": "configSettingsPrefix",
            "type": "string",
            "label": "Config Prefix",
            "defaultValue": "PULUMI_",
            "required": false,
            "helpMarkDown": "comma seperated, case insensitive list of prefixes where environment variables with one of these given prefixes will be saved into the stacks config using the value from the current job environment and setting name without the prefix.",
            "visibleRule": "cmd = update config || cmd = output config"
        },
        {
            "name": "configSettingsIncludePrefix",
            "type": "boolean",
            "label": "Include Prefix",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "set to true to include the prefix from the environment variable name in the config variable name.",
            "visibleRule": "cmd = update config || cmd = output config"
        },
        {
            "name": "configOutputVariable",
            "type": "string",
            "label": "Output Variable",
            "defaultValue": "STACK_CONFIG_UPDATE_RESULT",
            "required": false,
            "helpMarkDown": "the name of the job level environment variable that will store the result of the update. Possible values are: 'some_change' or 'no_change'",
            "visibleRule": "cmd = update config"
        },
        {
            "name": "writeCmdOutputToDisk",
            "type": "boolean",
            "label": "Output FilePath",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Set to true to log the output of the pulumi command to disk.",
            "visibleRule": "cmd = preview || cmd = up || cmd = destroy"
        },
        {
            "name": "cmdOutputFilePath",
            "type": "filePath",
            "label": "Output FilePath",
            "defaultValue": "$(Agent.TempDirectory)/$(cmd).log",
            "required": false,
            "helpMarkDown": "The full filePath to a file to write the output of this command to. Note: file will be overwritten if already exists.",
            "visibleRule": "writeCmdOutputToDisk = true"
        }
    ],
    "execution": {
        "Node": {
            "target": "index.js"
        }
    }
}